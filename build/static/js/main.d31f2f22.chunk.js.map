{"version":3,"sources":["Components/Header.js","Components/Phrases.js","Components/Api.js","Components/FormOutput.js","Components/FormInput.js","Components/Landing.js","Components/About.js","Components/PageNotFound.js","router/AppRouter.js","index.js"],"names":["Header","className","to","style","textAlign","verticalAlign","size","Phrases","a","b","c","d","e","f","g","h","i","j","k","l","m","n","o","p","q","r","s","t","u","v","w","x","y","z","Api","userInput","useState","response","respOne","def","fl","phrase","respTwo","apiResults","setRes","culchrShock","noun","verb","adverb","adjective","unknown","unknown2","badForYou","useEffect","colDictApi","process","respArr","axios","result","console","log","madeUp1","shortdef","madeUp2","arrLen","data","length","getArrs","arr","push","pOneTag","pTwoTag","pOnePh","pTwoPh","fetchData","paddingBottom","Math","floor","random","FormOutput","letters","phrases","letterOut","map","letter","index","phraseOut","FormInput","letterArr","phraseArr","reset","setData","getRandom","onSubmit","preventDefault","target","elements","value","toLowerCase","trim","split","forEach","includes","handleInput","type","name","placeholder","required","onClick","Landing","fontSize","About","src","alt","fontWeight","href","PageNotFound","AppRouter","exact","path","component","ReactDOM","render","document","getElementById"],"mappings":"+KA4CeA,EAxCA,WACb,OACE,cAAC,WAAD,UACE,yBAASC,UAAU,SAAnB,SACE,sBAAKA,UAAU,YAAf,UACE,qBAAKA,UAAU,kBAAf,SACE,cAAC,IAAD,CAAMC,GAAG,SAAT,SACE,qBAAID,UAAU,gBAAgBE,MAAO,CAAEC,UAAW,SAAlD,UACE,cAAC,IAAD,CACEH,UAAU,aACVE,MAAO,CAAEE,cAAe,UACxBC,KAAM,KACL,IALL,eAUJ,qBAAKH,MAAO,CAAEC,UAAW,UAAzB,SACE,oBAAIH,UAAU,4BAAd,gCAEF,8BACE,cAAC,IAAD,CAAMC,GAAG,IAAT,SACE,qBAAID,UAAU,WAAd,UACE,cAAC,IAAD,CAAOA,UAAU,aAAaK,KAAM,KACpC,sBAAML,UAAU,eAFlB,gBAOJ,qBAAKE,MAAO,CAAEC,UAAW,UAAzB,SACE,oBAAIH,UAAU,4BAAd,oD,gBC2eGM,EA7gBC,CACdC,EAAG,CACD,uBACA,oBACA,eACA,qCACA,0BACA,eACA,yBACA,kBACA,sBACA,sBACA,8BACA,4BACA,qBACA,gCACA,uBAGFC,EAAG,CACD,mBACA,YACA,WACA,kBACA,uBACA,qBACA,eACA,oBACA,iBACA,iBACA,sBACA,0BACA,eACA,mBACA,2BACA,2BAGFC,EAAG,CACD,uBACA,SACA,OACA,eACA,UACA,qBACA,4BACA,cACA,iBACA,0BACA,eACA,eACA,qBACA,mBACA,gBACA,8BACA,oBACA,yBACA,oBACA,mCACA,iBACA,oBACA,+BACA,uBACA,2BACA,2BACA,uBACA,kCAGFC,EAAG,CACD,4BACA,oBACA,8BACA,uBACA,oBACA,6BACA,kBACA,eACA,kBACA,wCACA,sCACA,wBACA,0BACA,4BACA,oBACA,iBAGFC,EAAG,CACD,mBACA,+BACA,2BACA,2BACA,oBACA,eACA,qCACA,sBACA,qCACA,uBACA,8BACA,yBACA,oBACA,4BACA,yBACA,uBAGFC,EAAG,CACD,mBACA,iBACA,yBACA,mBACA,yBACA,8BACA,mBACA,eACA,iBACA,sBACA,iBACA,4BACA,yBACA,0BACA,oBACA,oBACA,sBACA,kBACA,kBACA,wBACA,kCACA,0BACA,6BAGFC,EAAG,CACD,oCACA,YACA,8BACA,mCACA,iBACA,iBACA,sBACA,qBACA,qBACA,eACA,iBACA,yBACA,8BACA,mCACA,6BACA,gCACA,oBAGFC,EAAG,CACD,yBACA,mBACA,0BACA,gBACA,iBACA,uBACA,mBACA,mBACA,6BACA,uBACA,mBACA,iBACA,oBAGFC,EAAG,CACD,gBACA,kBACA,iCACA,mBACA,0BACA,kBACA,oBACA,yBACA,cACA,uBACA,2BACA,uBACA,gCACA,gCACA,iBACA,kBACA,kCAGFC,EAAG,CACD,eACA,kBACA,gBACA,sBACA,0BACA,oBACA,uBACA,oBACA,sBAGFC,EAAG,CACD,kBACA,yBACA,uBACA,6BACA,uBACA,mBACA,iBACA,oBACA,iBACA,qBACA,oCACA,oBACA,oCACA,qBACA,+BACA,oBACA,gBAGFC,EAAG,CACD,gBACA,4BACA,kBACA,wBACA,2BACA,uBACA,iBACA,gBACA,eACA,gBACA,UACA,eACA,yBACA,kBACA,wBAGFC,EAAG,CACD,yBACA,qBACA,gCACA,aACA,mBACA,gBACA,2BACA,sBACA,sBACA,mBACA,wBACA,mCACA,mBACA,kBACA,6BAGFC,EAAG,CACD,sBACA,uBACA,6BACA,kBACA,mBACA,iBACA,yBACA,4BACA,wBACA,+BACA,mBACA,iBACA,kBACA,kBACA,yBAGFC,EAAG,CACD,gBACA,iBACA,6BACA,wBACA,sBACA,oBACA,wBACA,yBACA,4BACA,gCACA,iCACA,gBACA,sBACA,eACA,mBACA,uBACA,uBACA,uBACA,iBACA,kBACA,uBAGFC,EAAG,CACD,4BACA,kBACA,0BACA,kBACA,iBACA,sBACA,kBACA,uBACA,gBACA,oBACA,yBACA,0BACA,uCACA,iBACA,kBACA,qBACA,sBAGFC,EAAG,CACD,eACA,mBACA,mBACA,uBACA,gBACA,gBACA,gBACA,qBACA,qBACA,2BACA,wBAGFC,EAAG,CACD,oBACA,wBACA,mBACA,sBACA,+BACA,eACA,cACA,oBACA,kBACA,qBACA,mBACA,6BACA,4BACA,6BACA,6BACA,kBACA,gBACA,wBACA,uBACA,qBACA,uBACA,2BAGFC,EAAG,CACD,gBACA,mBACA,wBACA,mBACA,yBACA,gBACA,kBACA,wBACA,gBACA,2BACA,4BACA,0BACA,sBACA,2BACA,gCACA,iCACA,6BACA,0BACA,qCACA,gBACA,kCACA,aACA,uBACA,kBACA,wBACA,cACA,uBACA,0BAGFC,EAAG,CACD,gBACA,eACA,gBACA,kBACA,kBACA,gBACA,mBACA,4BACA,kBACA,4BACA,kBACA,oBACA,0BACA,oBACA,mBACA,cACA,aACA,cACA,cACA,cACA,oBACA,oBACA,qBACA,mBACA,gBACA,kBACA,sBACA,sBACA,kCAGFC,EAAG,CACD,eACA,aACA,qBACA,6BACA,sBACA,gBACA,sBACA,uBACA,sBACA,0BACA,qBACA,qBACA,iBACA,kBACA,uBAGFC,EAAG,CACD,uBACA,cACA,mBACA,mBACA,iBACA,gBACA,mBACA,gBACA,sBACA,2BACA,yBAGFC,EAAG,CACD,kBACA,kBACA,mBACA,mBACA,kBACA,cACA,uBACA,wBACA,sBACA,iBACA,mBACA,UACA,oBACA,kBAGFC,EAAG,CACD,gBACA,eACA,oBACA,kBACA,kBACA,mBACA,mBACA,wBAGFC,EAAG,CACD,qBACA,wBACA,mBACA,iBACA,kBACA,kBACA,iBACA,yBACA,0BACA,sCACA,kBACA,qBACA,gBACA,oCACA,qBACA,kBACA,iBACA,eACA,iBACA,kBACA,kBACA,2BACA,4BAGFC,EAAG,CACD,8BACA,yBACA,+BACA,8CACA,4BACA,yBACA,uBACA,gCACA,gBACA,YACA,kBACA,iBACA,oBACA,0CACA,2B,0CC7WWC,EAzJH,SAAC,GAAmB,IAAjBC,EAAgB,EAAhBA,UAAgB,EACAC,mBAAS,CACpCC,SAAU,GACVC,QAAS,CACPC,IAAK,GACLC,GAAI,GACJC,OAAQ,IAEVC,QAAS,CACPH,IAAK,GACLC,GAAI,GACJC,OAAQ,MAXiB,mBACtBE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","file":"static/js/main.d31f2f22.chunk.js","sourcesContent":["import React, { Fragment } from 'react';\nimport { Link } from 'react-router-dom';\nimport { Stack, Info } from 'phosphor-react';\n\nconst Header = () => {\n  return (\n    <Fragment>\n      <section className='header'>\n        <div className='container'>\n          <div className='about-container'>\n            <Link to='/about'>\n              <h5 className='header__about' style={{ textAlign: 'right' }}>\n                <Info\n                  className='about-icon'\n                  style={{ verticalAlign: 'bottom' }}\n                  size={18}\n                />{' '}\n                about\n              </h5>\n            </Link>\n          </div>\n          <div style={{ textAlign: 'center' }}>\n            <h2 className='header__text text-primary'>You have values.</h2>\n          </div>\n          <div>\n            <Link to='/'>\n              <h1 className='branding'>\n                <Stack className='brand-icon' size={70} />\n                <span className='culchrSpan'></span>\n                Culchr\n              </h1>\n            </Link>\n          </div>\n          <div style={{ textAlign: 'center' }}>\n            <h2 className='header__text text-primary'>\n              Now all you need is culture.\n            </h2>\n          </div>\n        </div>\n      </section>\n    </Fragment>\n  );\n};\n\nexport default Header;\n","const Phrases = {\n  a: [\n    'accept not accepting',\n    'accept acceptance',\n    'audit belief',\n    'acknowledgement the unacknowledged',\n    'achieve to achieve less',\n    'asynchronous',\n    'ability is not agility',\n    'advise aversion',\n    'about last night...',\n    'adult conversations',\n    'audit the truth of auditing',\n    'ascend greatness mountain',\n    'answering the call',\n    'aspire to inspire aspirations',\n    'anger leads to hate',\n  ],\n\n  b: [\n    'being ok with ok',\n    'best self',\n    'bring it',\n    'being wonderful',\n    'beating expectations',\n    'behave like adults',\n    'bring snacks',\n    'believe in belief',\n    'bacon is gross',\n    'back to basics',\n    'belief is believing',\n    'brilliance is brilliant',\n    'be brilliant',\n    'better call saul',\n    'breaking bad was awesome',\n    'brilliance breeds ideas',\n  ],\n\n  c: [\n    'cauterize the wounds',\n    'caring',\n    'care',\n    'care to dare',\n    'courage',\n    'courageous courage',\n    'crippling the competition',\n    'competitive',\n    'cool your jets',\n    'cop to the consequences',\n    'consequences',\n    'conspiracies',\n    'convoluted pricing',\n    'capture the flag',\n    'collaboration',\n    'calibrate the collaborators',\n    'calibrate profits',\n    'calibrate expectations',\n    'calibrate courage',\n    'collaborate with calibrated care',\n    'calibrate care',\n    'critical thinking',\n    'calibrate critical resources',\n    'constant calibration',\n    'calibrate your constants',\n    'constrain the contraints',\n    'conceive conceptions',\n    'concepts calibrate competition',\n  ],\n\n  d: [\n    'dangerous passion berries',\n    'dial those phones',\n    'dedication to the dedicated',\n    'dangerous dedication',\n    'drive for driving',\n    'drive to dedicated passion',\n    'drive thru fear',\n    \"don't dabble\",\n    'drive to places',\n    'drooling at meetings will be punished',\n    'dedication at the expense of health',\n    'delivering excellence',\n    'delivering deliverables',\n    'daring is not carebearing',\n    'dare to be daring',\n    'dark thoughts',\n  ],\n\n  e: [\n    'energetic energy',\n    'energy does not define taste',\n    'engage in engaging stuff',\n    'enormous water dinosaurs',\n    'engaging the real',\n    'easy is good',\n    'empty pockets means an empty heart',\n    'enemy of my frenemy',\n    'ever thought about eating a cloud?',\n    'evacuate your vowels',\n    'exacting revenge for wealth',\n    'excitement is exciting',\n    'exuberance smells',\n    'extreme power is powerful',\n    'extreme group projects',\n    'extreme edification',\n  ],\n\n  f: [\n    'finite resources',\n    'future-ability',\n    'face the face you fear',\n    'faces make faces',\n    'fear fears the fearful',\n    'fear being filled with fear',\n    'fearful optimism',\n    'fake numbers',\n    'fake news bruh',\n    'fake media stole it',\n    'fake fake fake',\n    'fake it until you make it',\n    'frappes are delightful',\n    'fraudulent is felonious',\n    'free snake friday',\n    'free snack friday',\n    'fear leads to anger',\n    'feel your feels',\n    'fuel your feels',\n    'feels lead to feeling',\n    'friction only leads to slowdown',\n    'finger guns close sales',\n    'freedom to freely be free',\n  ],\n\n  g: [\n    'grab awesome by the awesome gland',\n    'go get it',\n    'gravitate towards greatness',\n    'greatness never paid for freedom',\n    'gaps are traps',\n    'gauge the room',\n    'growing can be good',\n    'growing can be bad',\n    'growing is knowing',\n    'get after it',\n    'granular greed',\n    'giggles are contagious',\n    'gratification is gratifying',\n    'greatness at the expense of good',\n    'good is the enemy of great',\n    'great is the enemy of awesome',\n    'gather resources',\n  ],\n\n  h: [\n    'help others be helpful',\n    'hardcore profits',\n    'hate leads to suffering',\n    'healthy greed',\n    'healthy health',\n    'health is not wealth',\n    'hit your targets',\n    'home is not work',\n    'honor is usually overrated',\n    'honor is also honour',\n    'honor and health',\n    'honor thy boss',\n    'how is your mom?',\n  ],\n\n  i: [\n    'ignore trends',\n    'institute goals',\n    'ingratiation will be tolerated',\n    'ingest greatness',\n    'incite a riot of profit',\n    'institute ideas',\n    'ideas are idyllic',\n    'ideas drive innovation',\n    'ignore fear',\n    'ignore the imitators',\n    'imitate whenever you can',\n    'imitation is success',\n    'in-fighting is not encouraged',\n    'insignificance is not allowed',\n    'imagine images',\n    'imagine dragons',\n    'imagination can be imaginative',\n  ],\n\n  j: [\n    'jumble ideas',\n    'jigsaw the norm',\n    'join together',\n    'jump at opportunity',\n    'jam your day with money',\n    'jumble convention',\n    'jump for great ideas',\n    'jump into success',\n    'jingle all the way',\n  ],\n\n  k: [\n    'kick down doors',\n    'karate chop opposition',\n    'kingpins are winners',\n    'kindness never got a bonus',\n    'kick start briliance',\n    'keep moving fast',\n    'keep it simple',\n    'keep your courage',\n    'keep your keys',\n    'keys unlock things',\n    'keys of imagination unlock dreams',\n    'know the unknowns',\n    'knowledge is knowing you can know',\n    'know what you know',\n    'know that knowing is courage',\n    'know when to know',\n    'keep knowing',\n  ],\n\n  l: [\n    'love yourself',\n    'light a fire of greatness',\n    'list your goals',\n    'learn from your enemy',\n    'leave stupid at the door',\n    'legs take you places',\n    'learn to learn',\n    'live to learn',\n    'love to live',\n    'love to learn',\n    'lean in',\n    'lose nothing',\n    'lose yourself in greed',\n    'lava is failure',\n    'let it go, let it go',\n  ],\n\n  m: [\n    'marginalize everything',\n    'make things better',\n    'move at the speed of movement',\n    'make moves',\n    'minimize thought',\n    'minimize loss',\n    'minimize loss of thought',\n    'minimize forfeiture',\n    'minimize minimizing',\n    'maximize thought',\n    'maximize loss of loss',\n    'maximize forfeitures of forfeits',\n    'maximize profits',\n    'manuever change',\n    'manuever profit obsticles',\n  ],\n\n  n: [\n    'normalize normality',\n    'normal is not normal',\n    'needs are like needy wants',\n    'navigate change',\n    'navigate profits',\n    'navigate greed',\n    'navigate collaboration',\n    'not all heroes wear capes',\n    'never give up profits',\n    'night time is the right time',\n    'navigate courage',\n    'navigate sales',\n    'navigate energy',\n    'navigate normal',\n    'notches are for belts',\n  ],\n\n  o: [\n    'oppose change',\n    'oppose failure',\n    'operate at high efficiency',\n    'oppose losing profits',\n    'oppose the poseable',\n    'oppose the posers',\n    'operate operationally',\n    'overestimate estimates',\n    'overreach the unreachable',\n    'overcompensate and underwhelm',\n    'over promise and under deliver',\n    'overt courage',\n    'overt profitability',\n    'over the top',\n    'open door policy',\n    'openness and honesty',\n    'open to more profits',\n    'open to closed ideas',\n    'open to change',\n    'open to courage',\n    'open to opportunity',\n  ],\n\n  p: [\n    'prepare, prepare, prepare',\n    'postpone losses',\n    'presuppose suppositions',\n    'propose courage',\n    'prepay parking',\n    'prevent forfeitures',\n    'prevent failure',\n    'pregame the big game',\n    'pass the buck',\n    'prefill the forms',\n    'postpone collaboration',\n    'preemptive co-operation',\n    'preliminary prepository prepositions',\n    'pay it forward',\n    'positive change',\n    'preemptive profits',\n    'prequalify success',\n  ],\n\n  q: [\n    'quiz success',\n    'quell the haters',\n    'quick judgements',\n    'quick responsiveness',\n    'quick success',\n    'quiz the norm',\n    'quick profits',\n    'quake with success',\n    'quake with courage',\n    'quake with collaboration',\n    'quake II was awesome',\n  ],\n\n  r: [\n    'responsive design',\n    'reasonable is nothing',\n    'react reactively',\n    'revise your success',\n    'revisit visitation schedules',\n    'remove doubt',\n    'remove fear',\n    'remove complexity',\n    'remove the norm',\n    'react with courage',\n    'react with ideas',\n    'react with profitable rage',\n    'reason with collaboration',\n    'reason opposed to reaction',\n    'reaction opposes to reason',\n    'remove reaction',\n    'remove reason',\n    'relive the good times',\n    'relive the bad times',\n    'reconstitute sales',\n    'reconstitute courage',\n    'reconstitute opposition',\n  ],\n\n  s: [\n    'supply demand',\n    'source resources',\n    'supplant suppositions',\n    'subvert the norm',\n    'subject matter experts',\n    'sever the bad',\n    'sever tied ties',\n    'snakes are nope ropes',\n    'severus snape',\n    'suppose you stop whining',\n    'standing is erect sitting',\n    'sequence the sequential',\n    'standby for success',\n    'sell the sellable things',\n    'sales first, courage whenever',\n    'sales first, success pre-first',\n    'sales first, profits first',\n    'standardize amazingness',\n    'supercalifragilisticexpialidocious',\n    'sucking sucks',\n    'sweat less sweat and more blood',\n    'sweet lawd',\n    'swing for the fences',\n    'secrets are fun',\n    'secrecy builds morale',\n    'sweet kicks',\n    'sometimes lie to win',\n    'supply work place dogs',\n  ],\n\n  t: [\n    'total control',\n    'take control',\n    'turn a profit',\n    'turn to success',\n    'turn to courage',\n    'turn to ideas',\n    'take time to win',\n    'take competitors by force',\n    'twist the truth',\n    'truth and time management',\n    'truth and ideas',\n    'truth and success',\n    'truth and collaboration',\n    'truth and courage',\n    'turn up the heat',\n    'take a dive',\n    'try change',\n    'try success',\n    'try profits',\n    'try winning',\n    'try collaboration',\n    'try and try again',\n    'twist words to win',\n    'total domination',\n    'tweak a nudge',\n    'try being cheap',\n    'tremble when scared',\n    'tame the untameable',\n    'twister is not office approved',\n  ],\n\n  u: [\n    'underachieve',\n    'underwhelm',\n    'use good judgement',\n    'unilateral decision making',\n    'unimaginative ideas',\n    'understanding',\n    'understanding ideas',\n    'understanding demand',\n    'understanding sales',\n    'understanding decisions',\n    'undo your mistakes',\n    'undo your failures',\n    'undo your fear',\n    'undo your doubt',\n    'ubiquitous ubiquity',\n  ],\n\n  v: [\n    'vulcanize your drive',\n    'vacate fear',\n    'vote for courage',\n    'validate profits',\n    'validate sales',\n    'validate self',\n    'validate success',\n    'visible ideas',\n    'visible imagination',\n    'vroom vroom the business',\n    'velociraptor the weak',\n  ],\n\n  w: [\n    'watch greatness',\n    'wish for change',\n    'wish for courage',\n    'water down ideas',\n    'waffle on ideas',\n    'wag the dog',\n    'wind up the business',\n    'waiver on the complex',\n    'witness imagination',\n    'witness change',\n    'witness struggle',\n    'wise up',\n    'worry for nothing',\n    \"where's waldo?\",\n  ],\n\n  x: [\n    'x-amine ideas',\n    'x-ceed goals',\n    'x-ceed the normal',\n    'x-treme profits',\n    'x-ert dominance',\n    'x-ert compliance',\n    'x-ceed greatness',\n    'x is a stupid letter',\n  ],\n\n  y: [\n    'you are the engine',\n    'you make business run',\n    'you are the idea',\n    'y axis to 100%',\n    'you are courage',\n    'you are success',\n    'you are profit',\n    'yesterday is not today',\n    'yesterday was yesterday',\n    \"yesterday's idea is today's success\",\n    'you are courage',\n    'you believe in you',\n    'you are sales',\n    'youth is the product of invention',\n    'yes is the best no',\n    'yes is not a no',\n    'yes is an idea',\n    'yes is power',\n    'yes is courage',\n    'yes is not fear',\n    'yes is never no',\n    'yesterday is never today',\n    'yes rhymes with business',\n  ],\n\n  z: [\n    'zanny ideas are still ideas',\n    'zuckerburg had an idea',\n    'ziti is the pasta of success',\n    'zero is the number of times you should fail',\n    'zero is more than nothing',\n    'zero is still a number',\n    'zero is not a target',\n    'zero courage is not dominance',\n    'zero mistakes',\n    'zero hate',\n    'zero forfeiture',\n    'zero tolerance',\n    'zero windbreakers',\n    'zero is an idea thats ready to be a one',\n    'zero cannot be divided',\n  ],\n};\nexport default Phrases;\n","import React, { Fragment, useState, useEffect } from 'react';\nimport { BookmarkSimple } from 'phosphor-react';\nimport axios from 'axios';\n\nconst Api = ({ userInput }) => {\n  const [apiResults, setRes] = useState({\n    response: {},\n    respOne: {\n      def: '',\n      fl: '',\n      phrase: '',\n    },\n    respTwo: {\n      def: '',\n      fl: '',\n      phrase: '',\n    },\n  });\n  const { respOne, respTwo } = apiResults;\n\n  const culchrShock = {\n    noun: [\n      'Think of the company when you think of',\n      'Nothing represents the company more than',\n    ],\n    verb: [\n      'The company lives, eats, sleeps and works',\n      'No one is better than the company at',\n    ],\n    adverb: ['The company conquers', 'The company razzle dazzles'],\n    adjective: [\n      'The company could be described as',\n      'The company should never be described as',\n    ],\n    unknown: [\n      'Not sure what to say here about...',\n      'Look, this word is weird, but the company is going to work the hell out of',\n    ],\n    unknown2: [\"Maybe try a new word that isn't\", 'You should not have chosen'],\n  };\n\n  const badForYou = [\n    'This will definitely be bad for you.',\n    \"I'd probably start worrying.\",\n    'Peace was never an option.',\n    \"It's never too late to switch careers!\",\n    \"At least it's not Friday - they fire people on Friday. Wait. Is it Friday?\",\n    \"Who's ready for some overtime!\",\n    \"No, I'm not threatening you Dave. I'm warning you.\",\n  ];\n\n  useEffect(() => {\n    const dictKey = process.env.REACT_APP_DICT_API;\n    const colDictApi = `https://dictionaryapi.com/api/v3/references/collegiate/json/${userInput}?key=${dictKey}`;\n    const fetchData = async () => {\n      try {\n        let respArr = [];\n        const result = await axios(colDictApi);\n        console.log(result);\n        const madeUp1 = {\n          shortdef: [\"Whoopsie - API couldn't find your input...\"],\n          fl: 'unknown',\n        };\n        const madeUp2 = {\n          shortdef: ['Hey, at least you still have cool values above...'],\n          fl: 'unknown2',\n        };\n        const arrLen = result.data.length;\n        const getArrs = (arr) => {\n          for (let i = 0; respArr.length < 2; i++) {\n            respArr.push(arr[i]);\n          }\n        };\n        if (arrLen >= 2) {\n          getArrs(result.data);\n        } else if (arrLen === 1) {\n          respArr.push(result.data[0]);\n          respArr.push(madeUp2);\n        } else {\n          respArr.push(madeUp1);\n          respArr.push(madeUp2);\n        }\n\n        const pOneTag = respArr[0].fl;\n        const pTwoTag = respArr[1].fl;\n        const pOnePh = culchrShock[pOneTag][0];\n        const pTwoPh = culchrShock[pTwoTag][1];\n\n        setRes({\n          response: result,\n          respOne: {\n            def: respArr[0].shortdef[0],\n            fl: respArr[0].fl,\n            phrase: pOnePh,\n          },\n          respTwo: {\n            def: respArr[1].shortdef[0],\n            fl: respArr[1].fl,\n            phrase: pTwoPh,\n          },\n        });\n      } catch (error) {\n        console.log(error);\n      }\n    };\n    fetchData();\n  }, []);\n  return (\n    <Fragment>\n      <div className='container-lead'>\n        <div className='lead-line'>\n          <p>Let's incorporate this into your corporates.</p>\n          <p>I don't know what that means either.</p>\n        </div>\n        <div className='grid'>\n          <div className='testimonial'>\n            <div style={{ paddingBottom: '1rem' }}>\n              <BookmarkSimple style={{ verticalAlign: 'bottom' }} size={30} />{' '}\n              <p>\n                {userInput} ({respOne.fl})\n              </p>\n            </div>\n            <div className='test-def'>\n              <p>{respOne.def}</p>\n            </div>\n          </div>\n          <div className='testimonial'>\n            <div style={{ paddingBottom: '1rem' }}>\n              <BookmarkSimple style={{ verticalAlign: 'bottom' }} size={30} />{' '}\n              <p>\n                {userInput} ({respTwo.fl})\n              </p>\n            </div>\n            <div className='test-def'>\n              <p>{respTwo.def}</p>\n            </div>\n          </div>\n          <div className='testimonial'>\n            <div style={{ paddingBottom: '1rem' }}>\n              <BookmarkSimple style={{ verticalAlign: 'bottom' }} size={30} />{' '}\n              <p>culchrize {userInput}!</p>\n            </div>\n            <div className='test-def'>\n              <p>\n                {respOne.phrase} {userInput}. {respTwo.phrase} {userInput}.{' '}\n                {badForYou[Math.floor(Math.random() * badForYou.length)]}{' '}\n                Imagine this directed at your hapless employees!\n              </p>\n            </div>\n          </div>\n        </div>\n        <p className='goodbyeSwine'>Thank you for using Culchr.</p>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default Api;\n","import React, { Fragment } from 'react';\nimport { Stack } from 'phosphor-react';\nimport Api from './Api';\n\nconst FormOutput = ({ userInput, letters, phrases }) => {\n  const letterOut = letters.map((letter, index) => (\n    <p className='letter' key={index}>\n      {letter}\n    </p>\n  ));\n  const phraseOut = phrases.map((phrase, index) => (\n    <p className='phrase' key={index}>\n      {phrase}\n    </p>\n  ));\n  return (\n    <Fragment>\n      <div className='result-preface'>\n        <div className='result-banner'>\n          <p>\n            CULCHR VALUES{' '}\n            <span className='brand'>\n              by <Stack size={10} />\n              <span className='culchrSpan2'>Culchr</span>\n            </span>\n          </p>\n        </div>\n      </div>\n\n      <div className='output-grid-container'>\n        <div className='letters-grid'>{letterOut}</div>\n        <div className='phrases-grid'>{phraseOut}</div>\n      </div>\n      <Api userInput={userInput} />\n    </Fragment>\n  );\n};\n\nexport default FormOutput;\n","import React, { Fragment, useState } from 'react';\nimport Phrases from './Phrases';\nimport FormOutput from './FormOutput';\n\nconst FormInput = () => {\n  const [data, setData] = useState({\n    userInput: '',\n    letterArr: [],\n    phraseArr: [],\n    reset: false,\n  });\n\n  const { userInput, letterArr, phraseArr, reset } = data;\n\n  const getRandom = (arr) => {\n    const ran = Math.floor(Math.random() * arr.length);\n    return arr[ran];\n  };\n  const handleReset = (e) => {\n    setData({\n      ...data,\n      reset: false,\n    });\n  };\n\n  const handleInput = (e) => {\n    e.preventDefault();\n    const userInput = e.target.elements.userInput.value.toLowerCase().trim();\n    const letterArr = userInput.split('');\n    const phraseArr = [];\n    letterArr.forEach((letter) => {\n      let phrase = getRandom(Phrases[letter]);\n      if (phraseArr.includes(phrase)) {\n        getRandom(Phrases[letter]);\n      } else {\n        phraseArr.push(phrase);\n      }\n    });\n    setData({\n      ...data,\n      userInput,\n      letterArr,\n      phraseArr,\n      reset: true,\n    });\n    e.target.elements.userInput.value = '';\n  };\n\n  return (\n    <Fragment>\n      <div className='container-lead'>\n        <p className='form-intro'>\n          It couldn't be more simple. Just use the form below to enter a word\n          you want to base your values around. Culchr does the rest. In seconds\n          you will have a full and robust corporate culture worthy of a\n          PowerPoint presentation and several hours of Human Resource meeting\n          material to indoctrinate your employees with!\n        </p>\n        <form className='input' onSubmit={(e) => handleInput(e)}>\n          <label className='input-label'>Enter a word</label>\n          <input\n            type='text'\n            name='userInput'\n            placeholder='try a buzzword, e.g. Power'\n            className='input-input'\n            required\n          />\n          {!reset && <button className='btn'>Get Culchr'd</button>}\n        </form>\n        {reset && (\n          <button className='btn-reset' onClick={(e) => handleReset(e)}>\n            Reset\n          </button>\n        )}\n      </div>\n      {reset && (\n        <FormOutput\n          userInput={userInput}\n          letters={letterArr}\n          phrases={phraseArr}\n        />\n      )}\n    </Fragment>\n  );\n};\n\nexport default FormInput;\n","import React, { Fragment } from 'react';\nimport { User, ShoppingCartSimple } from 'phosphor-react';\nimport FormInput from './FormInput';\n\nconst Landing = () => {\n  return (\n    <Fragment>\n      <div className='container-lead'>\n        <div className='lead'>\n          <p>Corporate culture is hard.</p>\n          <p>Let us make it easy.</p>\n        </div>\n        <div className='grid'>\n          <div className='testimonial'>\n            <div style={{ paddingBottom: '1rem' }}>\n              <ShoppingCartSimple\n                style={{ verticalAlign: 'bottom' }}\n                size={30}\n              />{' '}\n              CUSTOMER REVIEW\n            </div>\n            <p>\n              \"It was like magic. We used culchr and within minutes every\n              employee was fully engaged and believed in our brand! We don't\n              even employ an HR department anymore and the rancid smell is gone\n              from the breakroom!\"\n            </p>\n            <div className='test-name'>\n              <p style={{ fontSize: '1rem' }}>\n                <User style={{ verticalAlign: 'bottom' }} size={20} /> Jan\n                Chicago, IL\n              </p>\n            </div>\n          </div>\n          <div className='testimonial'>\n            <div style={{ paddingBottom: '1rem' }}>\n              <ShoppingCartSimple\n                style={{ verticalAlign: 'bottom' }}\n                size={30}\n              />{' '}\n              CUSTOMER REVIEW\n            </div>\n            <p>\n              \"We must have had several dozen brain-storming sessions around\n              culture and value statements. We just couldn't get it right.\n              Employees were still asking for better pay and working conditions.\n              But not after Culchr!\"\n            </p>\n            <div className='test-name'>\n              <p style={{ fontSize: '1rem' }}>\n                <User style={{ verticalAlign: 'bottom' }} size={20} /> Peter\n                Aunawana, PA\n              </p>\n            </div>\n          </div>\n          <div className='testimonial'>\n            <div style={{ paddingBottom: '1rem' }}>\n              <ShoppingCartSimple\n                style={{ verticalAlign: 'bottom' }}\n                size={30}\n              />{' '}\n              CUSTOMER REVIEW\n            </div>\n            <p>\n              \"We had given up hope for having a cool plaque on the wall with\n              values we could agree on. But then we used Culchr and now we have\n              the legit sweetest plaque on the wall. It's so dope!\"\n            </p>\n            <div className='test-name'>\n              <p style={{ fontSize: '1rem' }}>\n                <User style={{ verticalAlign: 'bottom' }} size={20} /> Beth\n                Finntownship, OH\n              </p>\n            </div>\n          </div>\n        </div>\n        <p>Time to try Culchur for yourself!</p>\n      </div>\n      <FormInput />\n    </Fragment>\n  );\n};\n\nexport default Landing;\n","import React, { Fragment } from 'react';\n\nconst About = () => {\n  return (\n    <Fragment>\n      <div className='container-lead'>\n        <div className='lead'>\n          <img\n            className='jumpy'\n            src='./img/jump.jpg'\n            alt='crazy man jumping over non-impressive chasm'\n          />\n        </div>\n        <div className='lead-about'>\n          <h3 style={{ fontWeight: '500' }}>\n            <span className='about-green'>Culchr</span> was founded on a single\n            idea.\n          </h3>\n          <p className='about-text'>\n            Cartoon guys in business attire jumping across chasms are freaking\n            cool. I think generating and implementing your corporate culture\n            should make just as much sense as jumping over stuff in tailored\n            clothing, while also being super easy.\n          </p>\n          <h3 style={{ fontWeight: '500' }}>\n            <span className='about-green'>Culchr</span> saves time.\n          </h3>\n          <p className='about-text'>\n            You know what's dumb? Being dumb. You know what's smart? Of course\n            you do! It's saving time while also being inverse-dumb! Culchr saves\n            you loads of time. Instead of sitting around wondering what the new\n            letters of your corporate buzzword should stand for, now you can sit\n            around and wonder why your earnings are flat, or why they cancelled\n            Firefly so damn early. I designed Culchr to be responsive, reliable,\n            intelligent and fast. So you don't have to be!\n          </p>\n          <h3 style={{ fontWeight: '500' }}>\n            <span className='about-green'>Culchr</span> understands your\n            feelings.\n          </h3>\n          <p className='about-text'>\n            Look, I get it. One minute you're sharing the sweet new baby yoda\n            meme you found on Reddit and the next minute your boss is telling\n            you that the yellow stain on your shirt is a dead give away that you\n            haven't changed your clothes in the last 37 Zoom meetings. Work is\n            hard. That's why I designed Culchr to understand your human emotions\n            and provide you with soothing advice and cooing noises like your mom\n            used to make.\n          </p>\n          <h3 style={{ fontWeight: '500' }}>\n            <span className='about-green'>Culchr</span> does not understand your\n            feelings.\n          </h3>\n          <p className='about-text'>\n            Apparently I haven't actually made Culchr self-aware, nor can it\n            read your feelings or emotions. The cooing sound thing will come in\n            a future update, but you should probably just mostly disregard the\n            above paragraph. In fact, maybe just disregard most of what you've\n            seen here.\n          </p>\n        </div>\n        <div className='about-footer'>\n          <p className='footer-text'>\n            Culchr was designed by me, Jon Collins. It is a work of pure fun,\n            hobby and ridiculousness. In no way, shape, or form should you ever\n            entrust me, or anything I build for your work, job, or livelihood. A\n            few final words of acknowlegement. The definitions and sometimes\n            lack of definitions are courtesy of Merriam-Webster and their API.\n            Info on how to use the API for yourself or your projects can be\n            found here{' '}\n            <a href='https://dictionaryapi.com/'>https://dictionaryapi.com/</a>{' '}\n            Additionally, the above sweet vector image of a portly business man\n            doing a sweet 360 fakie inward double heelflip over the world's\n            smallest grand canyon, is provided courtesy of{' '}\n            <a href='https://www.vecteezy.com/free-vector/advantage'>\n              Advantage Vectors by Vecteezy\n            </a>{' '}\n            Finally, I'd like to say Hi Marc, and Jarrett, stop backflipping off\n            dophins just to throw your car batteries in the ocean. You'll get\n            more batteries in there with less complicated maneuvers.\n          </p>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default About;\n","import React, { Fragment } from 'react';\n\nconst PageNotFound = () => {\n  return (\n    <Fragment>\n      <div className='container-lead'>\n        <div className='lead'>\n          <img className='jumpy' src='./img/roo.jpg' alt='a cute kangaroo' />\n        </div>\n        <div className='lead-about'>\n          <h3 style={{ fontWeight: '500' }}>\n            <span className='about-green'>404</span> page not found\n          </h3>\n          <p className='about-text'>\n            Looks like you've bounced off the path. Please allow this friendly\n            and cute kangaroo to bounce you back. Also, never try and get a real\n            life kangaroo to bounce you anywhere. The pouch is sticky and most\n            roos are jerks.\n          </p>\n        </div>\n        <div className='about-footer'>\n          <p className='footer-text'>\n            Culchr was designed by me, Jon Collins. It is a work of pure fun,\n            hobby and ridiculousness. In no way, shape, or form should you ever\n            entrust me, or anything I build for your work, job, or livelihood. A\n            few final words of acknowlegement. The definitions and sometimes\n            lack of definitions are courtesy of Merriam-Webster and their API.\n            Info on how to use the API for yourself or your projects can be\n            found here{' '}\n            <a href='https://dictionaryapi.com/'>https://dictionaryapi.com/</a>{' '}\n            Additionally, the above sweet vector image of a portly business man\n            doing a sweet 360 fakie inward double heelflip over the world's\n            smallest grand canyon, is provided courtesy of{' '}\n            <a href='https://www.vecteezy.com/free-vector/advantage'>\n              Advantage Vectors by Vecteezy\n            </a>{' '}\n            Finally, I'd like to say Hi Marc, and Jarrett, stop backflipping off\n            dophins just to throw your car batteries in the ocean. You'll get\n            more batteries in there with less complicated maneuvers.\n          </p>\n        </div>\n      </div>\n    </Fragment>\n  );\n};\n\nexport default PageNotFound;\n","import React, { Fragment } from 'react';\nimport { BrowserRouter as Router, Switch, Route } from 'react-router-dom';\nimport Header from '../Components/Header';\nimport Landing from '../Components/Landing';\nimport About from '../Components/About';\nimport PageNotFound from '../Components/PageNotFound';\n\nconst AppRouter = () => {\n  return (\n    <Router>\n      <Fragment>\n        <Header />\n        <Switch>\n          <Route exact path='/' component={Landing} />\n          <Route exact path='/about' component={About} />\n          <Route component={PageNotFound} />\n        </Switch>\n      </Fragment>\n    </Router>\n  );\n};\n\nexport default AppRouter;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport AppRouter from './router/AppRouter';\n\nReactDOM.render(<AppRouter />, document.getElementById('root'));\n"],"sourceRoot":""}